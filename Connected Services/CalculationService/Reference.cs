//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalculatorChallenge.CalculationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entity", Namespace="http://schemas.datacontract.org/2004/07/Calculator.Commons.Implementation")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CalculatorChallenge.CalculationService.CalculatorOperation))]
    public partial class Entity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalculatorOperation", Namespace="http://schemas.datacontract.org/2004/07/Calculator.Domain")]
    [System.SerializableAttribute()]
    public partial class CalculatorOperation : CalculatorChallenge.CalculationService.Entity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CalculatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstOperandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondOperandField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CalculatorId {
            get {
                return this.CalculatorIdField;
            }
            set {
                if ((this.CalculatorIdField.Equals(value) != true)) {
                    this.CalculatorIdField = value;
                    this.RaisePropertyChanged("CalculatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstOperand {
            get {
                return this.FirstOperandField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstOperandField, value) != true)) {
                    this.FirstOperandField = value;
                    this.RaisePropertyChanged("FirstOperand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationField, value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondOperand {
            get {
                return this.SecondOperandField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondOperandField, value) != true)) {
                    this.SecondOperandField = value;
                    this.RaisePropertyChanged("SecondOperand");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalculationService.ICalculationService")]
    public interface ICalculationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/GetData", ReplyAction="http://tempuri.org/ICalculationService/GetDataResponse")]
        CalculatorChallenge.CalculationService.CalculatorOperation GetData(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/GetData", ReplyAction="http://tempuri.org/ICalculationService/GetDataResponse")]
        System.Threading.Tasks.Task<CalculatorChallenge.CalculationService.CalculatorOperation> GetDataAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/GetDataFromGuid", ReplyAction="http://tempuri.org/ICalculationService/GetDataFromGuidResponse")]
        CalculatorChallenge.CalculationService.CalculatorOperation GetDataFromGuid(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/GetDataFromGuid", ReplyAction="http://tempuri.org/ICalculationService/GetDataFromGuidResponse")]
        System.Threading.Tasks.Task<CalculatorChallenge.CalculationService.CalculatorOperation> GetDataFromGuidAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/GetAllData", ReplyAction="http://tempuri.org/ICalculationService/GetAllDataResponse")]
        CalculatorChallenge.CalculationService.CalculatorOperation[] GetAllData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/GetAllData", ReplyAction="http://tempuri.org/ICalculationService/GetAllDataResponse")]
        System.Threading.Tasks.Task<CalculatorChallenge.CalculationService.CalculatorOperation[]> GetAllDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/CalculateResult", ReplyAction="http://tempuri.org/ICalculationService/CalculateResultResponse")]
        CalculatorChallenge.CalculationService.CalculatorOperation CalculateResult(Calculator.Service.DTOs.CalculateResultRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculationService/CalculateResult", ReplyAction="http://tempuri.org/ICalculationService/CalculateResultResponse")]
        System.Threading.Tasks.Task<CalculatorChallenge.CalculationService.CalculatorOperation> CalculateResultAsync(Calculator.Service.DTOs.CalculateResultRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculationServiceChannel : CalculatorChallenge.CalculationService.ICalculationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculationServiceClient : System.ServiceModel.ClientBase<CalculatorChallenge.CalculationService.ICalculationService>, CalculatorChallenge.CalculationService.ICalculationService {
        
        public CalculationServiceClient() {
        }
        
        public CalculationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CalculatorChallenge.CalculationService.CalculatorOperation GetData(int id) {
            return base.Channel.GetData(id);
        }
        
        public System.Threading.Tasks.Task<CalculatorChallenge.CalculationService.CalculatorOperation> GetDataAsync(int id) {
            return base.Channel.GetDataAsync(id);
        }
        
        public CalculatorChallenge.CalculationService.CalculatorOperation GetDataFromGuid(System.Guid id) {
            return base.Channel.GetDataFromGuid(id);
        }
        
        public System.Threading.Tasks.Task<CalculatorChallenge.CalculationService.CalculatorOperation> GetDataFromGuidAsync(System.Guid id) {
            return base.Channel.GetDataFromGuidAsync(id);
        }
        
        public CalculatorChallenge.CalculationService.CalculatorOperation[] GetAllData() {
            return base.Channel.GetAllData();
        }
        
        public System.Threading.Tasks.Task<CalculatorChallenge.CalculationService.CalculatorOperation[]> GetAllDataAsync() {
            return base.Channel.GetAllDataAsync();
        }
        
        public CalculatorChallenge.CalculationService.CalculatorOperation CalculateResult(Calculator.Service.DTOs.CalculateResultRequest request) {
            return base.Channel.CalculateResult(request);
        }
        
        public System.Threading.Tasks.Task<CalculatorChallenge.CalculationService.CalculatorOperation> CalculateResultAsync(Calculator.Service.DTOs.CalculateResultRequest request) {
            return base.Channel.CalculateResultAsync(request);
        }
    }
}
